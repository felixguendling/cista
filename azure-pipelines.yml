jobs:
- template: azure-win-build.yml
  parameters:
   name: VS2019
   vmImage: windows-2019
   cmakeArgs: '-G "Visual Studio 16 2019" -A x64 ..'

- template: azure-win-build.yml
  parameters:
   name: VS2017
   vmImage: vs2017-win2016
   cmakeArgs: '-G "Visual Studio 15 2017" -A x64 ..'

- job: LINUX_CLANG
  strategy:
    matrix:
      REL:
        BUILD_TYPE: Release
        CXXFLAGS: '-std=c++17 -stdlib=libc++ -D_LIBCPP_VERSION=1 -march=native'
      DBG:
        BUILD_TYPE: Debug
        CXXFLAGS: '-std=c++17 -stdlib=libc++ -D_LIBCPP_VERSION=1 -fno-omit-frame-pointer -fsanitize=address'
  pool:
    vmImage: ubuntu-16.04
  variables:
    CXX: /opt/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04/bin/clang++
    LD_LIBRARY_PATH: /opt/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04/lib
  steps:
  - script: |
      sudo curl -Ls http://releases.llvm.org/8.0.0/clang%2bllvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz -o clang.tar.xz
      sudo tar -xf clang.tar.xz -C /opt
  - script: |
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) ..
    displayName: 'CMake'
  - script: make cista-test
    workingDirectory: build
    displayName: 'Build'
  - script: ./cista-test
    workingDirectory: build
    displayName: 'Run Tests'

- job: LINUX_GCC
  strategy:
    matrix:
      REL:
        BUILD_TYPE: Release
        CXXFLAGS: '-std=c++17 -march=native'
      DBG:
        BUILD_TYPE: Debug
        CXXFLAGS: '-std=c++17 -D_LIBCPP_VERSION=1 -fno-omit-frame-pointer -fsanitize=address'
  pool:
    vmImage: ubuntu-16.04
  variables:
    CXX: g++-8
  steps:
  - script: |
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt update
      sudo apt install -y --no-install-recommends g++-8
  - script: |
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) ..
    displayName: 'CMake'
  - script: make cista-test
    workingDirectory: build
    displayName: 'Build'
  - script: ./cista-test
    workingDirectory: build
    displayName: 'Run Tests'

- job: POWERPC
  pool:
    vmImage: ubuntu-16.04
  variables:
    ROOT_DIR: /ppc-root
  steps:
  - script: |
      sudo apt update
      sudo apt install -y --no-install-recommends \
        qemu-user-static \
        binfmt-support \
        debootstrap
  - script: |
      docker run \
        -u root \
        -v "$PWD:/repo" \
        -e "CXX=/usr/bin/powerpc-linux-gnu-g++-7" \
        -e "CC=/usr/bin/powerpc-linux-gnu-gcc-7" \
        -e "CXXFLAGS=-std=c++17" \
        "felixguendling/cross-build-cpp" \
        bash -c "cmake -DCMAKE_AR=/usr/bin/powerpc-linux-gnu-ar -DCMAKE_LINKER=/usr/bin/powerpc-linux-gnu-ld /repo && make cista-test && cp cista-test /repo"
    displayName: 'Build'
  - script: |
      sudo debootstrap --foreign --no-check-gpg --arch=powerpc xenial $(ROOT_DIR) http://ports.ubuntu.com/
      sudo mount -t proc /proc $(ROOT_DIR)/proc
      sudo cp /usr/bin/qemu-ppc-static $(ROOT_DIR)/usr/bin/
      sudo chroot $(ROOT_DIR) /debootstrap/debootstrap --second-stage
    displayName: 'Setup PowerPC Chroot'
  - script: |
      sudo cp cista-test $(ROOT_DIR)
      sudo chroot $(ROOT_DIR) /cista-test
    displayName: 'Run Tests'